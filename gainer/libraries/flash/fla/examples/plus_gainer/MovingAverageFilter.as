// 非常にシンプルな移動平均フィルタclass MovingAverageFilter {	private var _taps:Number;	// タップ数	private var _values:Array;	// 過去の値を保持するための配列	function MovingAverageFilter(taps:Number) {		_taps = taps;		_values = new Array(_taps);	// タップ数に応じて配列を生成	}	function processSample(sample:Number):Number {		var acc:Number = 0;		var i:Number = 0;		// 配列の先頭に新しい値を代入		_values[0] = sample;				// 全ての値を加算した後でタップ数で割って平均を求める		for (i = 0; i < _taps; i++) {			acc = acc + _values[i];		}		acc = acc / _taps;				// 1 つずつ配列の中の値をシフトする		//            0  1  2  3  4  ...		// シフト前：[A][B][C][D][E] ...		// シフト後：[A][A][B][C][D] ...		for (i = _taps - 1; i > 0; i--) {			_values[i] = _values[i - 1];		}		return acc;	}}