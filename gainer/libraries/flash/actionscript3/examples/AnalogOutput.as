package {	import flash.geom.Rectangle;	import flash.display.Sprite;	import flash.display.MovieClip;	import flash.events.Event;	import flash.events.MouseEvent;	import gainer.*;	public class AnalogOutput extends Sprite {		private var _gio:Gainer;		private var _aoutValues:Array = [0, 0, 0, 0];		public function AnalogOutput() {			// Gainerのインスタンスを生成する			_gio = new Gainer("localhost", 2000, Gainer.MODE1, true);			// I/Oモジュールの準備が完了した時に呼ばれるイベントハンドラをセット			_gio.onReady = _start;		}		// I/Oモジュールの準備が完了したら以下を実行		private function _start():void {			// それぞれのスライダに対して以下を実行			for (var i:int = 0; i < 4; i++) {				// 各イベントに対してイベントリスナをセット				this["bar" + i].addEventListener(MouseEvent.MOUSE_DOWN, _beginDrag);				this["bar" + i].addEventListener(MouseEvent.MOUSE_UP, _endDrag);				// ドラッグ可能なスライダであることを示すためにカーソルを変更				this["bar" + i].buttonMode = true;			}			// I/Oモジュールに対してコマンドを送信し終わった時に呼ばれるイベントハンドラをセット			_gio.onFinished = _updateOutputs;		}		// 同期を取りながら最速で出力を更新		private function _updateOutputs():void {			_gio.analogOutput(this._aoutValues);		}		// ドラッグ開始		private function _beginDrag(e:Event):void {			e.target.startDrag(false, 							   new Rectangle(0, 0, e.target.parent.gauge.width - 											 e.target.width, 0));			addEventListener(Event.ENTER_FRAME, _updateValues);		}		// ドラッグ終了		private function _endDrag(e:Event):void {			e.currentTarget.stopDrag();			removeEventListener(Event.ENTER_FRAME, _updateValues);		}		// スライダから値を取得して_aoutValuesを更新		private function _updateValues(e:Event):void {			// それぞれのスライダに対して以下を実行			for (var i:int = 0; i < 4; i++) {				_aoutValues[i] = this["bar" + i].slider.x;			}		}	}}